<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="shoppingMapper">
	<!-- resultMaps -->
	<!-- 1. Product -->
	<resultMap type="Product" id="productResultMap">
		<id column="PRODUCT_NO" property="productNo"/>
		
		<result column="PRODUCT_NAME" property="productName"/>
		<result column="PRODUCT_PRICE" property="productPrice"/>
		<result column="PRODUCT_STOCK" property="productStock"/>
		<result column="PRODUCT_ONELINE" property="productOneline"/>
		<result column="PRODUCT_TYPE" property="productType"/>
		<result column="PRODUCT_UPDATE_DATE" property="productUpdateDate"/>
		<result column="PRODUCT_STATUS" property="productStatus"/>
		<result column="PRODUCT_PURCHASES" property="productPurchases"/>
	</resultMap>

	<!-- 2. Image -->
	<resultMap type="Image" id="imageResultMap">
		<id column="IMAGE_NO" property="imageNo"/>
		
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="FILE_PATH" property="filePath"/>
		<result column="UPLOAD_DATE" property="uploadDate"/>
		<result column="FILE_LEVEL" property="fileLevel"/> 
		<result column="PRODUCT_NO" property="productNo"/>
		<result column="IMAGE_STATUS" property="imageStatus"/>
	</resultMap>

	<!-- 3. Cart -->
	<resultMap type="Cart" id="cartResultMap">
		<id column="CART_NO" property="cartNo"/>
		
		<result column="PRODUCT_AMOUNT" property="productAmount"/>
		<result column="EMAIL_ID" property="emailId"/>
		<result column="PRODUCT_NO" property="productNo"/>
		<result column="PRODUCT_NAME" property="productName"/>
		<result column="PRODUCT_PRICE" property="productPrice"/>
	</resultMap>

	<!-- 4. OrderDetail -->
	<resultMap type="OrderDetail" id="orderDetailResultMap">
		<id column="ORDER_NO" property="orderNo"/>	
			
		<result column="ORDER_DATE" property="orderDate"/>		
		<result column="TOTAL_PRICE" property="totalPrice"/>
		<result column="ORDER_REQUEST" property="orderRequest"/>
		<result column="EMAIL_ID" property="emailId"/>
		<result column="ORDER_STATUS_NO" property="orderStatusName"/>
		<result column="RECIPIENT_NAME" property="recipientName"/>
		<result column="RECIPIENT_ADR" property="recipientAdr"/>
		<result column="RECIPIENT_PHONE" property="recipientPhone"/>
		<result column="ORDER_DETAIL_NO" property="orderDetailNo"/>
		<result column="ORDER_AMOUNT" property="orderAmount"/>
		<result column="PRODUCT_NO" property="productNo"/>
	</resultMap>
	
	<!-- 4. OrderDetail -->
	<resultMap type="OrderStatus" id="orderStatusResultMap">
		<id column="ORDER_STATUS_NO" property="orderStatusNo"/>
		
		<result column="ORDER_STATUS_NAME" property="orderStatusName"/>
		<result column="ORDER_NO" property="orderNo"/>
	</resultMap>	
	
		
	<!-- sql -->
	
	
	<!-- 총 게시물 수 구하기 -->
	<select id="getPdtListCount" resultType="_int">
		select count(*)
		from product
	</select>
	
	<!-- 상품 리스트 가져오기 -->
	<select id="selectPdtList" resultMap="productResultMap">
		select *
		from product
		where product_status = 'Y'
		order by product_no desc
	</select>
	
	<!-- 상품 썸네일 리스트 가져오기 -->
	<select id="selectThmbList" resultMap="imageResultMap">
		select *
		from image
		where file_level = 0 and image_status='Y'
	</select>
	
	<!-- 상품 등록 -->
	<!-- 1. Product 등록 -->  <!-- 재고는 처음에 100개라고 일단 가정 -->
	<insert id="insertProduct">
		insert into product
		values(seq_pid.nextval, #{productName}, #{productPrice}, 100 , #{productOneline}, 1, sysdate, default, default)
	</insert>
	
	<!-- 2. 상품의 Image 파일 등록 -->
	<insert id="insertPdtImages">
		insert into image
		values(seq_ino.nextval, #{changeName}, #{originName}, #{filePath}, sysdate, #{fileLevel}, seq_pid.currval, default)
	</insert>
	
	<!-- 장바구니 등록 -->
	<insert id="insertCart">
		insert into cart
		values(seq_carid.nextval, #{productAmount}, #{emailId}, #{productNo}, #{productName}, #{productPrice})
		
	</insert>
	
	<!-- 장바구니 등록 전 동일 상품 존재 여부 확인(productList.jsp의 ajax) -->
	<select id="checkCart" resultMap="cartResultMap">
		select *
		from cart
		where product_no = #{productNo} and email_id = #{emailId}
	</select>
	
	<!-- 장바구니 목록 가져오기 -->
	<select id="selectCartList" resultMap="cartResultMap">
		select *
		from cart
		<!-- where email_id= -->
		order by cart_no desc
	</select>
	
	<!-- 장바구니 품목 삭제 -->
	<delete id="deleteCart">
		delete from cart
		where cart_no = #{cartNo}
	</delete>
	
	<!-- 장바구니에서 결제 페이지로 이동 -->
	<!-- 1. 선택 장바구니 정보 가져오기 -->
	<select id="cartsForPay" resultMap="cartResultMap">
		select * 
		from cart
		where cart_no = #{cartNo}
	</select>
	
	<!-- 방법 3 => 1. 선택 장바구니 정보 가져오기 -->
	<!-- 1. 품목 변경 수량(productAmount)으로 db의  CART 변경하기 -->
	<update id="ctAmountUpdate">
		update cart
		set product_amount = #{productAmount}
		where cart_no=#{cartNo}
	</update>
	
	<!-- 2. 선택 장바구니 이미지 가져오기 -->
	<select id="imgForCartPay" resultMap="imageResultMap">
		select *
		from image
		where product_no = #{productNo} and file_level = 0
	</select>
	
	<!-- 주문 정보 저장 -->
	<!-- 1. 주문 장바구니 내역 가져오기 -->
	<select id="paidCartList" resultMap="cartResultMap">
		select *
		from cart
		where cart_no = #{cartNo}
	</select>
	
	<!-- 2. 주문 정보 넘기기 -->
	<insert id="insertOrder">
		insert into "ORDER"
		values(seq_oid.nextval, sysdate, #{totalPrice}, #{orderRequest}, #{emailId}, seq_osid.nextval, #{recipientName}, #{recipientAdr}, #{recipientPhone})
	</insert>
	
	<insert id="insertOrderStatus">
		insert into order_status
		values(seq_osid.currval, '주문', seq_oid.currval)
	</insert>
	
	<insert id="insertOrderDetail">
		insert into order_detail
		values(seq_odid.nextval, #{orderAmount}, #{productNo}, seq_oid.currval)
	</insert>
	
	<!-- 주문 내역 -->
	<!-- 1. 주문 내역 받아오기 -->
	<select id="myOrderList" resultMap="orderDetailResultMap">
		select *
		from "ORDER"
			left join order_detail using(order_no)
		where email_id=#{emailId}
	</select>
	
	<!-- 1. 주문 상태 내역 받아오기 -->
	<select id="myOrderStatusList" resultMap="orderStatusResultMap">
		select *
		from order_status
		where order_no=#{orderNo}
	</select>

</mapper>

















